{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/practx/practxweb/src/pages/dashboard/grouplist.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, Spinner } from 'reactstrap';\nimport useSWR from 'swr';\nimport * as Api from '../../redux/Api.js';\nimport { useSelector, connect } from 'react-redux';\nimport { Phone } from '@styled-icons/material';\nimport DashboardLayout from \"../../layouts/DashboardLayout\";\nimport Titlebar from \"../../components/Titlebar\";\nimport UserComponent from \"../../components/UserComponent\";\n\nfunction GroupList(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    0: practicesList,\n    1: setPracticesList\n  } = useState([]);\n  console.log(props.user);\n  const {\n    data,\n    error\n  } = useSWR(['http://practxbestaging-env.eba-6m7puu5w.us-east-2.elasticbeanstalk.com/api/practices', props.user.token], Api.getPractice);\n  console.log(data);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, \"failed to load\");\n\n  const approvePractice = id => {\n    _s();\n\n    const {\n      approvedData,\n      error\n    } = useSWR(['http://practxbestaging-env.eba-6m7puu5w.us-east-2.elasticbeanstalk.com/api/practices', props.user.token], Api.getPractice);\n    console.log(approvedData);\n  };\n\n  _s(approvePractice, \"ysBdP34uGOdVDci/V+rGX6juVos=\", false, function () {\n    return [useSWR];\n  });\n\n  const approvedPractices = () => {\n    const approved = practicesList.filter(practice => practice.approvalStatus === \"approved\");\n    setPracticesList(approved);\n  };\n\n  const unapprovedPractices = () => {\n    setPracticesList(data.practices.rows);\n  };\n\n  useEffect(() => {\n    if (!data) {\n      console.log(data);\n    } else {\n      setPracticesList(data.practices.rows);\n    }\n  }, [data]);\n  return __jsx(DashboardLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, !data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"loading...\") : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Spinner, {\n    color: \"dark\",\n    style: {\n      width: \"400px\",\n      height: \"400px\",\n      position: \"absolute\",\n      zIndex: \"1000\",\n      margin: \"auto 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Titlebar, {\n    title: \"Group List\",\n    crumb: [\"Home\", \"Group\", \"Group list\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: approvedPractices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }, \" Approved Practices \")), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: unapprovedPractices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 8\n    }\n  }, \" Not yet Approved Practices \"))), __jsx(Row, {\n    className: \"mt-3\",\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, !error && practicesList.map(practice => __jsx(UserComponent, {\n    practice: practice,\n    key: practice.id,\n    approve: approvePractice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 50\n    }\n  })))));\n}\n\n_s2(GroupList, \"IFpUIHf79eIEy3mXZ7DjcWhPUb0=\", false, function () {\n  return [useSWR];\n});\n\n_c = GroupList;\n\nfunction mapStateToProps(state) {\n  const {\n    user\n  } = state.auth;\n  return {\n    user: user\n  };\n}\n\nexport default connect(mapStateToProps, null)(GroupList);\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/pages/dashboard/grouplist.js"],"names":["Head","Link","useEffect","useState","Container","Row","Col","Button","Spinner","useSWR","Api","useSelector","connect","Phone","DashboardLayout","Titlebar","UserComponent","GroupList","props","practicesList","setPracticesList","console","log","user","data","error","token","getPractice","approvePractice","id","approvedData","approvedPractices","approved","filter","practice","approvalStatus","unapprovedPractices","practices","rows","width","height","position","zIndex","margin","map","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport Link from 'next/link';\n\nimport {useEffect, useState} from 'react';\nimport { Container, Row, Col, Button, Spinner} from 'reactstrap';\nimport useSWR from 'swr';\nimport * as Api from '../../redux/Api.js';\nimport {useSelector, connect} from 'react-redux';\n\n\nimport { Phone } from '@styled-icons/material';\n\nimport DashboardLayout from \"../../layouts/DashboardLayout\";\nimport Titlebar from \"../../components/Titlebar\";\nimport UserComponent from \"../../components/UserComponent\";\n\n\n\nfunction GroupList(props) {\n\n\tconst [practicesList, setPracticesList] = useState([]);\n\n\n\tconsole.log(props.user)\n\n\tconst { data, error } = useSWR(['http://practxbestaging-env.eba-6m7puu5w.us-east-2.elasticbeanstalk.com/api/practices', props.user.token ], Api.getPractice)\n\tconsole.log(data)\n\tif (error) return <div>failed to load</div>\n\n\tconst approvePractice = (id) =>{\n\t\tconst { approvedData, error } = useSWR(['http://practxbestaging-env.eba-6m7puu5w.us-east-2.elasticbeanstalk.com/api/practices', props.user.token ], Api.getPractice)\n\t\tconsole.log(approvedData)\n\t}\n\n\n\tconst approvedPractices = ()=>{\n\t\tconst approved = practicesList.filter((practice) => practice.approvalStatus === \"approved\");\n\t\tsetPracticesList(approved);\n\t}\n\n\tconst unapprovedPractices = ()=>{\n\t\tsetPracticesList(data.practices.rows);\n\t}\n\n\tuseEffect(()=>{\n\n\t\tif(!data){\n\n\t\t\tconsole.log(data);\n\n\t\t}else{\n\n\t\t\tsetPracticesList(data.practices.rows);\n\t\t}\n\n\t}, [data])\n\n\treturn (\n\n\n\t\t<DashboardLayout>\n\t\t{\n\t\t\t!data ? (<div>loading...</div>)\n\t\t\t:(\n\t\t\t\t<React.Fragment>\n\n\t\t\t\t\t<Spinner color=\"dark\" \n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth:\"400px\", \n\t\t\t\t\t\t\theight:\"400px\", \n\t\t\t\t\t\t\tposition:\"absolute\", \n\t\t\t\t\t\t\tzIndex:\"1000\",\n\t\t\t\t\t\t\tmargin: \"auto 0\"\n\t\t\t\t\t\t}} \n\t\t\t\t\t/>\n\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\n\t\t\t\t\t\t\t<Titlebar title=\"Group List\" crumb={[\"Home\", \"Group\", \"Group list\"]}/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\n\t\t\t\t\t\t\t<Button onClick={approvedPractices} > Approved Practices </Button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\n\t\t\t\t\t\t\t<Button onClick={unapprovedPractices} > Not yet Approved Practices </Button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t\n\t\t\t\t\t<Row className={\"mt-3\"} sm=\"4\">\n\n\t\t\t\t\t\t{!error && practicesList.map((practice) => <UserComponent practice={practice} key={practice.id} approve={approvePractice} />)}\n\n\t\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t\t\t\n\n\t\t</DashboardLayout>\n\n\t)\n}\n\n\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth\n  return { user: user }\n}\n\n\n\nexport default connect(mapStateToProps, null)(GroupList);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './login.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\nimport AuthLayout from \"../../layouts/AuthLayout\"; //redux store\n//import { loginUser, apiError } from '../../redux/actions';\n//Import Images\n\nexport default function ForgotPassword(props) {\n  var _useState = useState(false),\n      passwordResetStatus = _useState[0],\n      setPasswordResetStatus = _useState[1];\n\n  var _useState2 = useState(false),\n      loginerror = _useState2[0],\n      setLoginError = _useState2[1];\n\n  var formik = useFormik({\n    initialValues: {\n      email: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required('Required')\n    }),\n    onSubmit: function onSubmit(values) {\n      props.forgetPassword(values.email);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"account-pages my-5 pt-sm-5\"\n  }, __jsx(Container, null, __jsx(Row, {\n    className: \"justify-content-center\"\n  }, __jsx(Col, {\n    md: 8,\n    lg: 6,\n    xl: 5\n  }, __jsx(\"div\", {\n    className: \"text-center mb-4\"\n  }, __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    className: \"auth-logo mb-5 d-block\"\n  }, __jsx(\"img\", {\n    src: \"/images/practxLogo-dark.png\",\n    alt: \"PractX logo dark\",\n    height: \"100\",\n    className: \"logo logo-dark\"\n  })), __jsx(\"h4\", {\n    className: \"mt-3\"\n  }, \"Reset Password\"), __jsx(\"p\", {\n    className: \"text-muted mb-4\"\n  }, \"Reset Password With PractX\")), __jsx(Card, null, __jsx(CardBody, {\n    className: \"p-1\"\n  }, __jsx(\"div\", {\n    className: \"p-3\"\n  }, loginerror && __jsx(Alert, {\n    variant: \"danger\"\n  }, props.error), passwordResetStatus ? __jsx(Alert, {\n    variant: \"success\",\n    className: \"text-center mb-4\"\n  }, props.passwordResetStatus) : __jsx(Alert, {\n    variant: \"success\",\n    className: \"text-center mb-4\"\n  }, \"Enter your Email and instructions will be sent to you!\"), __jsx(Form, {\n    onSubmit: formik.handleSubmit\n  }, __jsx(FormGroup, {\n    className: \"mb-4\"\n  }, __jsx(Label, null, \" Email \"), __jsx(InputGroup, {\n    className: \"mb-3 bg-soft-light input-group-lg rounded-lg\"\n  }, __jsx(InputGroupAddon, {\n    addonType: \"prepend\"\n  }, __jsx(\"span\", {\n    className: \"input-group-text border-light text-muted\"\n  }, __jsx(\"i\", {\n    className: \"ri-mail-line\"\n  }))), __jsx(Input, {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    className: \"form-control bg-soft-light border-light\",\n    placeholder: \"Enter email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    invalid: formik.touched.email && formik.errors.email ? true : false\n  }), formik.touched.email && formik.errors.email ? __jsx(FormFeedback, {\n    type: \"invalid\"\n  }, formik.errors.email) : null)), __jsx(\"div\", null, __jsx(Button, {\n    color: \"primary\",\n    block: true,\n    className: \"waves-effect waves-light\",\n    type: \"submit\"\n  }, \" Reset \")))))), __jsx(\"div\", {\n    className: \"mt-5 text-center\"\n  }, __jsx(\"p\", null, \" Remember It ? \", __jsx(Link, {\n    href: \"/\",\n    className: \"font-weight-medium text-primary\"\n  }, \" Signin \"), \" \"), __jsx(\"p\", null, \"\\xA9 2020 PractX Crafted with \", __jsx(\"i\", {\n    className: \"mdi mdi-heart text-danger\"\n  }), \" by ReverSoftwares \")))))));\n}","map":null,"metadata":{},"sourceType":"module"}
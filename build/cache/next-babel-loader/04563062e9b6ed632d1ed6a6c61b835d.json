{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/practx/practxweb/src/pages/auth/reset-password.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './login.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\nimport AuthLayout from \"../../layouts/AuthLayout\";\nimport * as Actions from \"../../redux/auth/actions\"; //redux store\n//import { loginUser, apiError } from '../../redux/actions';\n//Import Images\n\nexport default function ForgotPassword(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    resetcode\n  } = router.query;\n  console.log(resetcode);\n  const passwordStatus = useSelector(state => state.passwordResetStatus, shallowEqual);\n  const {\n    0: passwordResetStatus,\n    1: setPasswordResetStatus\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      password: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().required('Please Enter Your Password')\n    }),\n    onSubmit: async values => {\n      await dispatch(Actions.forgetPasswordRequestSaga(values.password));\n      setPasswordResetStatus(true);\n    }\n  });\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"account-pages my-5 pt-sm-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 8,\n    lg: 6,\n    xl: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    className: \"auth-logo mb-5 d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/practxLogo-dark.png\",\n    alt: \"PractX logo dark\",\n    height: \"100\",\n    className: \"logo logo-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 34\n    }\n  })), __jsx(\"h4\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 30\n    }\n  }, \"Reset Password\"), __jsx(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }\n  }, \"Reset Password With PractX\")), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, __jsx(CardBody, {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }\n  }, __jsx(\"div\", {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 34\n    }\n  }, passwordResetStatus ? __jsx(Alert, {\n    variant: \"success\",\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 68\n    }\n  }, \"Your password has been changed successfuly\") : __jsx(Alert, {\n    variant: \"secondary\",\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 48\n    }\n  }, \"Enter your New password bellow!\"), __jsx(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 38\n    }\n  }, __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 42\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 46\n    }\n  }, \" New Password \"), __jsx(InputGroup, {\n    className: \"mb-3 bg-soft-light input-group-lg rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 46\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 50\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text border-light text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 54\n    }\n  }, __jsx(\"i\", {\n    className: \"ri-lock-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 58\n    }\n  }))), __jsx(Input, {\n    type: \"text\",\n    id: \"password\",\n    name: \"password\",\n    className: \"form-control bg-soft-light border-light\",\n    placeholder: \"Enter your new Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    invalid: formik.touched.password && formik.errors.password ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 50\n    }\n  }), formik.touched.password && formik.errors.password ? __jsx(FormFeedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 54\n    }\n  }, formik.errors.password) : null)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 42\n    }\n  }, __jsx(Button, {\n    color: \"danger\",\n    block: true,\n    className: \"waves-effect waves-light\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 46\n    }\n  }, \" Change my password \")))))), __jsx(\"div\", {\n    className: \"mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \" Remember It ? \", __jsx(Link, {\n    href: \"/\",\n    className: \"font-weight-medium text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 47\n    }\n  }, \" Signin \"), \" \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, \"\\xA9 2020 PractX Crafted with \", __jsx(\"i\", {\n    className: \"mdi mdi-heart text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 59\n    }\n  }), \" by ReverSoftwares \")))))));\n}\n\n_s(ForgotPassword, \"cUcCRzdgkdvYtAC8ZFqcE/VNyVI=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useFormik];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/pages/auth/reset-password.js"],"names":["useEffect","useState","connect","Redirect","useSelector","shallowEqual","useDispatch","useRouter","Container","Row","Col","Card","CardBody","FormGroup","Alert","Form","Input","Button","FormFeedback","Label","InputGroup","InputGroupAddon","useFormik","Yup","Head","Link","styles","utilStyles","AuthLayout","Actions","ForgotPassword","props","dispatch","router","resetcode","query","console","log","passwordStatus","state","passwordResetStatus","setPasswordResetStatus","formik","initialValues","password","validationSchema","object","string","required","onSubmit","values","forgetPasswordRequestSaga","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["\nimport {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {useSelector, shallowEqual, useDispatch} from \"react-redux\";\nimport {useRouter} from \"next/router\";\n\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './login.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nimport AuthLayout from \"../../layouts/AuthLayout\";\n\n\nimport * as Actions from \"../../redux/auth/actions\";\n\n//redux store\n//import { loginUser, apiError } from '../../redux/actions';\n\n//Import Images\n\n\n\n\n\n\nexport default function ForgotPassword(props) {\n\n\tconst dispatch = useDispatch()\n\tconst router = useRouter();\n\n\tconst { resetcode } = router.query;\n\n\tconsole.log(resetcode)\n\n\tconst passwordStatus = useSelector(state => state.passwordResetStatus, shallowEqual)\n\n\tconst [passwordResetStatus, setPasswordResetStatus] = useState(false);\n\n    \n    const formik = useFormik({\n        initialValues: {\n            password: ''\n        },\n        validationSchema: Yup.object({\n             password: Yup.string().required('Please Enter Your Password')\n        }),\n        onSubmit: async (values) => {\n\n            await dispatch(Actions.forgetPasswordRequestSaga(values.password));\n            setPasswordResetStatus(true)\n        },\n    });\n  \n    return (\n\n        <React.Fragment>\n\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md={8} lg={6} xl={5} >\n                            <div className=\"text-center mb-4\">\n\t                            <Link href=\"/\" passHref className=\"auth-logo mb-5 d-block\">\n\t                                <img src=\"/images/practxLogo-dark.png\" alt=\"PractX logo dark\" height=\"100\" className=\"logo logo-dark\"/>\n\t                            </Link>\n\n\t                            <h4 className=\"mt-3\">Reset Password</h4>\n\t                            <p className=\"text-muted mb-4\">Reset Password With PractX</p>\n\t                            \n\t                        </div>\n\n\n                            <Card>\n\t                            <CardBody className=\"p-1\">\n\t                                <div className=\"p-3\">\n\n\t                                        {\n\t                                            passwordResetStatus ? <Alert variant=\"success\" className=\"text-center mb-4\">Your password has been changed successfuly</Alert>\n\t                                            : <Alert variant=\"secondary\" className=\"text-center mb-4\">Enter your New password bellow!</Alert>\n\t                                        }\n\t                                    <Form onSubmit={formik.handleSubmit}>\n\t    \n\t                                        <FormGroup className=\"mb-4\">\n\t                                            <Label> New Password </Label>\n\t                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n\t                                                <InputGroupAddon addonType=\"prepend\">\n\t                                                    <span className=\"input-group-text border-light text-muted\">\n\t                                                        <i className=\"ri-lock-2-line\"></i>\n\t                                                    </span>\n\t                                                </InputGroupAddon>\n\t                                                <Input\n\t                                                    type=\"text\"\n\t                                                    id=\"password\"\n\t                                                    name=\"password\"\n\t                                                    className=\"form-control bg-soft-light border-light\"\n\t                                                    placeholder=\"Enter your new Password\"\n\t                                                    onChange={formik.handleChange}\n\t                                                    onBlur={formik.handleBlur}\n\t                                                    value={formik.values.password}\n\t                                                    invalid={formik.touched.password && formik.errors.password ? true : false}\n\t                                                />\n\t                                                {formik.touched.password && formik.errors.password ? (\n\t                                                    <FormFeedback type=\"invalid\">{formik.errors.password}</FormFeedback>\n\t                                                ) : null}\n\n\t                                            </InputGroup>\n\t                                        </FormGroup>\n\n\t                                        <div>\n\t                                            <Button color=\"danger\" block className=\"waves-effect waves-light\" type=\"submit\"> Change my password </Button>\n\t                                        </div>\n\n\t                                    </Form>\n\t                                </div>\n\t                            </CardBody>\n\t                        </Card>\n\n                        <div className=\"mt-5 text-center\">\n                            <p> Remember It ? <Link href=\"/\" className=\"font-weight-medium text-primary\"> Signin </Link> </p>\n                            <p>© 2020 PractX Crafted with <i className=\"mdi mdi-heart text-danger\"></i> by ReverSoftwares </p>\n                        </div>\n\n                            \n\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n        </React.Fragment>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as t from \"../constants\";\nexport default function authReducer(state = {}, action) {\n  switch (action.type) {\n    case t.ROOT_USER_LOGIN:\n      state = _objectSpread(_objectSpread({}, state), action.payload);\n      return state;\n\n    case t.USER_LOGOUT:\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/redux/reducers/authReducer.js"],"names":["t","authReducer","state","action","type","ROOT_USER_LOGIN","payload","USER_LOGOUT"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,cAAnB;AAEA,eAAe,SAASC,WAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAAyC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKJ,CAAC,CAACK,eAAP;AACCH,MAAAA,KAAK,mCAAOA,KAAP,GAAiBC,MAAM,CAACG,OAAxB,CAAL;AACA,aAAOJ,KAAP;;AAED,SAAKF,CAAC,CAACO,WAAP;AAEA;AACC,aAAOL,KAAP;AARF;AAUA","sourcesContent":["import * as t from \"../constants\";\n\nexport default function authReducer (state = {}, action){\n\tswitch(action.type){\n\t\tcase t.ROOT_USER_LOGIN:\n\t\t\tstate = {...state, ...action.payload}\n\t\t\treturn state;\n\n\t\tcase t.USER_LOGOUT:\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/practx/practxweb/src/pages/practice/auth/register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './login.module.scss';\nimport utilStyles from '../../../styles/utils.module.scss';\nimport AuthLayout from \"../../../layouts/AuthLayout\";\nexport default function LogIn(props) {\n  _s();\n\n  const {\n    0: user,\n    1: setUser\n  } = useState(false);\n  const {\n    0: signUpError,\n    1: setSignUpError\n  } = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required'),\n      email: Yup.string().email('Enter proper email').required('Required'),\n      password: Yup.string().required('Required')\n    }),\n    onSubmit: values => {\n      props.registerUser(values);\n    }\n  });\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"account-pages my-5 pt-sm-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    md: 8,\n    lg: 6,\n    xl: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    className: \"auth-logo d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/practxLogo-dark.png\",\n    alt: \"Practx logo dark\",\n    height: \"100\",\n    className: \"logo logo-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  })), __jsx(\"h4\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"Sign up\"), __jsx(\"p\", {\n    className: \"text-muted mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, \" Get your Practx account now \")), __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, __jsx(CardBody, {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, signUpError && __jsx(Alert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 60\n    }\n  }, props.error), user && __jsx(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 53\n    }\n  }, \"Thank You for registering with us!\"), __jsx(\"div\", {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, __jsx(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, \" Email \"), __jsx(InputGroup, {\n    className: \"mb-3 bg-soft-light input-group-lg rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text border-light text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 53\n    }\n  }, __jsx(\"i\", {\n    className: \"ri-user-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 57\n    }\n  }))), __jsx(Input, {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    className: \"form-control bg-soft-light border-light\",\n    placeholder: \"Enter email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    invalid: formik.touched.email && formik.errors.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(FormFeedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 53\n    }\n  }, formik.errors.email) : null)), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, \" Username \"), __jsx(InputGroup, {\n    className: \"mb-3 bg-soft-light input-group-lg rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 49\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text border-light text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 53\n    }\n  }, __jsx(\"i\", {\n    className: \"ri-user-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 57\n    }\n  }))), __jsx(Input, {\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    className: \"form-control bg-soft-light border-light\",\n    placeholder: \"Enter Username\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    invalid: formik.touched.username && formik.errors.username ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 49\n    }\n  }), formik.touched.username && formik.errors.username ? __jsx(FormFeedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 53\n    }\n  }, formik.errors.username) : null)), __jsx(FormGroup, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, \" Password \"), __jsx(InputGroup, {\n    className: \"mb-3 bg-soft-light input-group-lg rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 49\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text border-light text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 53\n    }\n  }, __jsx(\"i\", {\n    className: \"ri-lock-2-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 57\n    }\n  }))), __jsx(Input, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    className: \"form-control bg-soft-light border-light\",\n    placeholder: \"Enter Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    invalid: formik.touched.password && formik.errors.password ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 49\n    }\n  }), formik.touched.password && formik.errors.password ? __jsx(FormFeedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 53\n    }\n  }, formik.errors.password) : null)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    block: true,\n    className: \" waves-effect waves-light\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }, \"Sign up\")), __jsx(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, __jsx(\"p\", {\n    className: \"text-muted mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, \" By registering you agree to the Practx \", __jsx(Link, {\n    href: \"#\",\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 116\n    }\n  }, \" Terms of Use \"))))))), __jsx(\"div\", {\n    className: \"mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, \" Already have an account ? \", __jsx(Link, {\n    href: \"/\",\n    className: \"font-weight-medium text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 59\n    }\n  }, \" Signin \"), \" \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"\\xA9  2020 Practx.  Crafted with \", __jsx(\"i\", {\n    className: \"mdi mdi-heart text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 62\n    }\n  }), \" by ReverSoftwares\")))))));\n}\n\n_s(LogIn, \"OUNlggPfhZVyy1uJRrQJ2YdMNU8=\", false, function () {\n  return [useFormik];\n});\n\n_c = LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/pages/practice/auth/register.js"],"names":["useEffect","useState","Container","Row","Col","Card","CardBody","FormGroup","Alert","Form","Input","Button","FormFeedback","Label","InputGroup","InputGroupAddon","connect","useFormik","Yup","Head","Link","styles","utilStyles","AuthLayout","LogIn","props","user","setUser","signUpError","setSignUpError","formik","initialValues","username","email","password","validationSchema","object","string","required","onSubmit","values","registerUser","error","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport styles from './login.module.scss';\nimport utilStyles from '../../../styles/utils.module.scss';\n\nimport AuthLayout from \"../../../layouts/AuthLayout\";\n\n\n\n\n\n\nexport default function LogIn(props) {\n\n\n    const [user, setUser] = useState(false);\n    const [signUpError, setSignUpError] = useState(false);\n    \n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            username: Yup.string().required('Required'),\n            email: Yup.string().email('Enter proper email').required('Required'),\n            password: Yup.string()\n                .required('Required')\n        }),\n        onSubmit: values => {\n            props.registerUser(values);\n        },\n    });\n  \n    return (\n\n        <React.Fragment>\n\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md={8} lg={6} xl={5} >\n                            <div className=\"text-center mb-4\">\n                                <Link href=\"/\" passHref className=\"auth-logo d-block\">\n                                    <img src=\"/images/practxLogo-dark.png\" alt=\"Practx logo dark\" height=\"100\" className=\"logo logo-dark\"/>\n                                </Link>\n\n                                <h4 className=\"mt-3\">Sign up</h4>\n\n                                <p className=\"text-muted mb-4\"> Get your Practx account now </p>\n                                \n                            </div>\n\n\n                            <Card>\n                            <CardBody className=\"p-4\">\n                                        {\n                                            signUpError && <Alert color=\"danger\">{props.error}</Alert>\n                                        }\n                                        {\n                                            user && <Alert variant=\"success\">Thank You for registering with us!</Alert>\n                                        }\n                                <div className=\"p-3\">\n                                        \n                                    <Form onSubmit={formik.handleSubmit}>\n    \n                                        <FormGroup>\n                                            <Label> Email </Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter email\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.email}\n                                                    invalid={formik.touched.email && formik.errors.email ? true : false}\n                                                />\n                                                {formik.touched.email && formik.errors.email ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.email}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <FormGroup>\n                                            <Label> Username </Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"username\"\n                                                    name=\"username\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter Username\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.username}\n                                                    invalid={formik.touched.username && formik.errors.username ? true : false}\n                                                />\n                                                {formik.touched.username && formik.errors.username ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.username}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <FormGroup className=\"mb-4\">\n                                            <Label> Password </Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-lock-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"password\"\n                                                    id=\"password\"\n                                                    name=\"password\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter Password\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.password}\n                                                    invalid={formik.touched.password && formik.errors.password ? true : false}\n                                                />\n                                                {formik.touched.password && formik.errors.password ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.password}</FormFeedback>\n                                                ) : null}\n                                                \n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <div>\n                                            <Button color=\"primary\" block className=\" waves-effect waves-light\" type=\"submit\">Sign up</Button>\n                                        </div>\n\n                                        <div className=\"mt-4 text-center\">\n                                            <p className=\"text-muted mb-0\"> By registering you agree to the Practx <Link href=\"#\" className=\"text-primary\"> Terms of Use </Link></p>\n                                        </div>\n\n                                    </Form>\n                                </div>\n                            </CardBody>\n                        </Card>\n\n                        <div className=\"mt-5 text-center\">\n                            <p> Already have an account ? <Link href=\"/\" className=\"font-weight-medium text-primary\"> Signin </Link> </p>\n                            <p>©  2020 Practx.  Crafted with <i className=\"mdi mdi-heart text-danger\"></i> by ReverSoftwares</p>\n                        </div>\n\n                            \n\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n        </React.Fragment>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Dashboard, Email, Assignment, Person, Group, Accessibility, Alarm, Message, ArrowRight, ArrowDropDown } from '@styled-icons/material';\nimport { Nav, Navbar, NavItem, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavLink, NavbarBrand, NavbarToggler, NavbarText, Badge, Collapse, ListGroup, ListGroupItem } from 'reactstrap';\nimport Link from 'next/link';\nimport styles from \"./Sidebar.module.scss\";\n\nconst Sidebar = () => {\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(0);\n  const {\n    0: appointments,\n    1: setAppointments\n  } = useState(0);\n  const {\n    0: isOpenMessage,\n    1: setIsOpenMessage\n  } = useState(false);\n\n  const toggleMessage = () => setIsOpenMessage(!isOpenMessage);\n\n  const {\n    0: isOpenAppointment,\n    1: setIsOpenAppointment\n  } = useState(false);\n\n  const toggleAppointment = () => setIsOpenAppointment(!isOpenAppointment);\n\n  const {\n    0: isOpenGroup,\n    1: setIsOpenGroup\n  } = useState(false);\n\n  const toggleGroup = () => setIsOpenGroup(!isOpenGroup);\n\n  const {\n    0: isOpenUser,\n    1: setIsOpenUser\n  } = useState(false);\n\n  const toggleUser = () => setIsOpenUser(!isOpenUser);\n\n  const {\n    0: isOpenNotif,\n    1: setIsOpenNotif\n  } = useState(false);\n\n  const toggleNotif = () => setIsOpenNotif(!isOpenNotif);\n\n  return __jsx(\"div\", {\n    className: styles.sidebar\n  }, __jsx(\"div\", {\n    className: styles.profile\n  }, __jsx(\"img\", {\n    src: \"/images/users/avatar-1.jpg\",\n    className: styles.profilepic\n  }), __jsx(\"div\", {\n    className: styles.profilestatus\n  }, __jsx(\"p\", {\n    className: styles.username\n  }, \" Dr Kirican Palma\"), __jsx(\"span\", {\n    color: \"success\",\n    className: styles.badgestatus\n  }, \" \"), \" \", __jsx(\"span\", null, \"Online\"))), __jsx(Button, {\n    className: styles.sidebarbutton\n  }, __jsx(Dashboard, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Dashboard\", __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  })), __jsx(Button, {\n    id: \"toggler\",\n    className: styles.sidebarbutton,\n    onClick: toggleMessage\n  }, __jsx(Email, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Messages\", __jsx(\"div\", {\n    className: styles.sidebarIcon2\n  }, messages >= 0 && __jsx(Badge, {\n    color: \"success\",\n    className: styles.sidebadge,\n    pill: true\n  }, \"2\"), !isOpenMessage ? __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }) : __jsx(ArrowDropDown, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }))), __jsx(Collapse, {\n    isOpen: isOpenMessage\n  }, __jsx(ListGroup, null, __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Chat Groups\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Chat History\"))), __jsx(Button, {\n    id: \"toggler\",\n    className: styles.sidebarbutton,\n    onClick: toggleUser\n  }, __jsx(Person, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Users\", __jsx(\"div\", {\n    className: styles.sidebarIcon2\n  }, !isOpenUser ? __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }) : __jsx(ArrowDropDown, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }))), __jsx(Collapse, {\n    isOpen: isOpenUser\n  }, __jsx(ListGroup, null, __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Add User\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Edit User\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Users List\"))), __jsx(Button, {\n    id: \"toggler\",\n    className: styles.sidebarbutton,\n    onClick: toggleAppointment\n  }, __jsx(Assignment, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Appointments\", __jsx(\"div\", {\n    className: styles.sidebarIcon2\n  }, appointments >= 0 && __jsx(Badge, {\n    color: \"danger\",\n    className: styles.sidebadge,\n    pill: true\n  }, \"2\"), !isOpenAppointment ? __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }) : __jsx(ArrowDropDown, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }))), __jsx(Collapse, {\n    isOpen: isOpenAppointment\n  }, __jsx(ListGroup, null, __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Pending Appointments\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"All Appointments\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"Appointment History\"))), __jsx(Button, {\n    id: \"toggler\",\n    className: styles.sidebarbutton,\n    onClick: toggleGroup\n  }, __jsx(Group, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Groups\", __jsx(\"div\", {\n    className: styles.sidebarIcon2\n  }, !isOpenGroup ? __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }) : __jsx(ArrowDropDown, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }))), __jsx(Collapse, {\n    isOpen: isOpenGroup\n  }, __jsx(ListGroup, null, __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \" Add Group\"), __jsx(ListGroupItem, {\n    className: styles.listlist\n  }, \"View all Groups\"))), __jsx(Button, {\n    className: styles.sidebarbutton\n  }, __jsx(Alarm, {\n    size: 19,\n    className: styles.sidebarIcon\n  }), \"Notifications\", __jsx(\"div\", {\n    className: styles.sidebarIcon2\n  }, __jsx(ArrowRight, {\n    size: 20,\n    className: styles.sidebarIcon2\n  }))));\n};\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as t from \"../constants\";\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  user: {},\n  token: \"\"\n};\n\nfunction authReducer(state = initialState, action) {\n  switch (action.type) {\n    case t.ROOT_USER_LOGIN:\n      state = _objectSpread({}, state);\n      return state;\n\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case t.USER_LOGOUT:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        token: \"\",\n        user: {}\n      });\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/redux/reducers/authReducer.js"],"names":["t","HYDRATE","initialState","user","token","authReducer","state","action","type","ROOT_USER_LOGIN","payload","USER_LOGOUT"],"mappings":";;;;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,cAAnB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC,EADe;AAEpBC,EAAAA,KAAK,EAAC;AAFc,CAArB;;AAKA,SAASC,WAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4CK,MAA5C,EAAmD;AAClD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKR,CAAC,CAACS,eAAP;AACCH,MAAAA,KAAK,qBAAOA,KAAP,CAAL;AACA,aAAOA,KAAP;;AAED,SAAKL,OAAL;AACU,6CAAWK,KAAX,GAAqBC,MAAM,CAACG,OAA5B;;AAEV,SAAKV,CAAC,CAACW,WAAP;AACCL,MAAAA,KAAK,mCAAOA,KAAP;AAAcF,QAAAA,KAAK,EAAC,EAApB;AAAwBD,QAAAA,IAAI,EAAC;AAA7B,QAAL;AACA,aAAOG,KAAP;;AACD;AACC,aAAOA,KAAP;AAZF;AAcA;;AAED,eAAeD,WAAf","sourcesContent":["import * as t from \"../constants\";\nimport {HYDRATE} from 'next-redux-wrapper';\n\nconst initialState = {\n\tuser:{},\n\ttoken:\"\"\n};\n\nfunction authReducer (state = initialState, action){\n\tswitch(action.type){\n\t\tcase t.ROOT_USER_LOGIN:\n\t\t\tstate = {...state}\n\t\t\treturn state;\n\n\t\tcase HYDRATE:\n            return {...state, ...action.payload};\n\n\t\tcase t.USER_LOGOUT:\n\t\t\tstate = {...state, token:\"\", user:{}}\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}
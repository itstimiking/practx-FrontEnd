{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport * as t from \"../constants\";\nimport * as Api from '../Api.js'; // worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* loginRootUser(action) {\n  try {\n    const user = yield call(Api.loginRootUser, action.payload);\n    yield put({\n      type: t.ROOT_USER_LOGIN,\n      user: user.root,\n      token: user.token\n    });\n    if (user.message === \"Login Success\") action.payload.history.push({\n      pathname: \"/dashboard/dashboard\"\n    });\n  } catch (e) {\n    console.log(e, \"Can not login from saggaggaggag\");\n  }\n}\n\nfunction* mywatchLogin() {\n  yield takeLatest(\"RLOGIN\", loginRootUser);\n}\n\nexport default mywatchLogin;","map":{"version":3,"sources":["/home/timiking/Apps/practx/practxweb/src/redux/saga/sagas.js"],"names":["call","put","takeEvery","takeLatest","t","Api","loginRootUser","action","user","payload","type","ROOT_USER_LOGIN","root","token","message","history","push","pathname","e","console","log","mywatchLogin"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB,C,CAEA;;AACA,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAE7B,MAAI;AACL,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACK,GAAG,CAACC,aAAL,EAAoBC,MAAM,CAACE,OAA3B,CAAvB;AACG,UAAMR,GAAG,CAAC;AAACS,MAAAA,IAAI,EAAEN,CAAC,CAACO,eAAT;AAA0BH,MAAAA,IAAI,EAAEA,IAAI,CAACI,IAArC;AAA2CC,MAAAA,KAAK,EAACL,IAAI,CAACK;AAAtD,KAAD,CAAT;AACH,QAAIL,IAAI,CAACM,OAAL,KAAiB,eAArB,EACAP,MAAM,CAACE,OAAP,CAAeM,OAAf,CAAuBC,IAAvB,CAA4B;AAC3BC,MAAAA,QAAQ,EAAC;AADkB,KAA5B;AAIE,GARD,CAQE,OAAOC,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,iCAAf;AACA;AACH;;AAED,UAAUG,YAAV,GAAyB;AACvB,QAAMlB,UAAU,CAAC,QAAD,EAAWG,aAAX,CAAhB;AACD;;AAGD,eAAee,YAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport * as t from \"../constants\";\nimport * as Api from '../Api.js';\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* loginRootUser(action) {\n\n   try {\n\t\tconst user = yield call(Api.loginRootUser, action.payload);\n    \tyield put({type: t.ROOT_USER_LOGIN, user: user.root, token:user.token});\n\t\tif (user.message === \"Login Success\")\n\t\taction.payload.history.push({\n\t\t\tpathname:\"/dashboard/dashboard\"\n\t\t});\n\n   } catch (e) {\n\t   console.log(e, \"Can not login from saggaggaggag\")\n   }\n}\n\nfunction* mywatchLogin() {\n  yield takeLatest(\"RLOGIN\", loginRootUser);\n}\n\n\nexport default mywatchLogin;\n"]},"metadata":{},"sourceType":"module"}